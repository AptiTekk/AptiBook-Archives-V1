<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2016 AptiTekk, LLC. (https://AptiTekk.com/) - All Rights Reserved
  ~ Unauthorized copying of any part of Agenda, via any medium, is strictly prohibited.
  ~ Proprietary and confidential.
  -->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:b="http://bootsfaces.net/ui"

>

<ui:composition template="/WEB-INF/templates/default_header.xhtml">
    <ui:define name="css">
        <style type="text/css">
            .read-notification {
                opacity: 0.4;
            }

            .notification {
                height: 100%;
                padding-top: 15px;
            }

            hr {
                margin-top: 15px;
                margin-bottom: 0;
            }

            .read-notification:hover {
                opacity: 1;
            }
        </style>
    </ui:define>
    <ui:define name="content">
        <b:container>
            <b:row>
                <b:column colXs="12">
                    <ol class="breadcrumb" style="margin-top: 20px">
                        <li><h:link outcome="index" value="Home"/></li>
                        <li class="active">Notifications</li>
                    </ol>
                </b:column>
            </b:row>

            <h4>
                <h:outputText
                        value="#{empty notificationViewController.unreadNotifications
                        ? 'No Unread Notifications'
                        : notificationViewController.unreadNotifications
                            .size()
                            .toString()
                            .concat(' Unread Notification')
                            .concat(notificationViewController.unreadNotifications.size() > 1 ? 's' : '')}"/>
            </h4>
            <h:outputText styleClass="text-muted" value="Previously Read Notifications will be deleted after 3 days."
                          rendered="#{not empty notificationViewController.allNotifications}"/>
            <hr/>

            <ui:repeat value="#{notificationViewController.allNotifications}" var="notification">
                <h:panelGroup layout="block"
                              styleClass="notification #{notification.read ? 'read-notification' : null}">
                    <h:outputText value="#{notification.subject} " style="font-weight:bold"/>
                    &mdash;
                    <h:outputText value="#{notification.body}" escape="false"/>
                    <br/>
                    <h:outputText value="#{notification.timeAgo}" style="color:#808080"/>
                    <hr/>
                </h:panelGroup>
            </ui:repeat>
        </b:container>
    </ui:define>
</ui:composition>


</html>
